/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.ProdutoVO;
import servicos.ProdutoServicos;
import servicos.ServicosFactory;

/**
 * @author Thiago Cury
 * @version 1.0 beta
 * @since 09/04/2014
 */
public class GUIManutencaoProduto extends javax.swing.JInternalFrame {

    DefaultTableModel defaultTableModel
            = new DefaultTableModel(
                    new Object[][]{},
                    new Object[]{"Código", "Nome", "Valor Custo", "Quantidade"}
            );

    /**
     * Creates new form GUIManutencaoProduto
     */
    public GUIManutencaoProduto() {
        initComponents();
        preencher();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents()                      
Ú
    private void preencher() {
        try {
            ProdutoServicos produtoServicos
                    = ServicosFactory.getProdutoServicos();
            ArrayList<ProdutoVO> produtos
                    = produtoServicos.buscarProdutos();

            for (int i = 0; i < produtos.size(); i++) {
                defaultTableModel.addRow(new String[]{
                    String.valueOf(produtos.get(i).getIdProduto()),
                    produtos.get(i).getNome(),
                    String.valueOf(produtos.get(i).getValorCusto()),
                    String.valueOf(produtos.get(i).getQuantidade())
                });
            }//fecha for

            jtableProduto.setModel(defaultTableModel);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro!" + e.getMessage());
        }//catch
    }//preencher

    private void limpar() {
        defaultTableModel.setNumRows(0);
    }//limpar

    private void deletar() {
        try {
            int linha = jtableProduto.getSelectedRow();
            if (linha == -1) {
                JOptionPane.showMessageDialog(this,
                        "Selecione uma linha para excluir!");
                return;
            }//fecha if
            ProdutoServicos produtoServicos
                    = ServicosFactory.getProdutoServicos();
            String id
                    = jtableProduto.getValueAt(linha, 0).toString();
            produtoServicos.deletarProduto(Long.parseLong(id));

            JOptionPane.showMessageDialog(this,
                    "Produto excluido com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro! " + e.getMessage());
        }//catch
    }//deletar

    private void alterar() {
        int linha = jtableProduto.getSelectedRow();
        String id = jtableProduto.getValueAt(linha, 0).toString();
        String nome = jtableProduto.getValueAt(linha, 1).toString();
        String valorCusto = jtableProduto.getValueAt(linha, 2).toString();
        String qtd = jtableProduto.getValueAt(linha, 3).toString();

        jtCodigo.setText(id);
        jtNome.setText(nome);
        jtValorCusto.setText(valorCusto);
        jtQuantidade.setText(qtd);
    }

    private void confirmarAlteracao() {
        try {
            ProdutoVO pVO = new ProdutoVO();
            pVO.setIdProduto(Long.parseLong(jtCodigo.getText()));//NAO ESQUECER!
            pVO.setNome(jtNome.getText());
            pVO.setValorCusto(Double.parseDouble(jtValorCusto.getText()));
            pVO.setQuantidade(Integer.parseInt(jtQuantidade.getText()));

            //Enviando o objeto pVO para o banco de dados
            ProdutoServicos ps = servicos.ServicosFactory.getProdutoServicos();
            //Chamando o método 
            ps.alterarProduto(pVO);

            JOptionPane.showMessageDialog(
                    rootPane,
                    "Produto alterado com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro! " + e.getMessage());
        }//catch
    }

    private void filtrar() {
        try {
           if(jtPesquisa.getText().isEmpty()) {
               limpar();
               preencher();
               return;
           }
            //Enviando o objeto pVO para o banco de dados
            ProdutoServicos ps = servicos.ServicosFactory.getProdutoServicos();
            String pesquisa = jtPesquisa.getText();
            String filtro = jcbFiltro.getSelectedItem().toString();
            ArrayList<ProdutoVO> produtos = ps.filtrar(pesquisa, filtro);
            
            for (int i = 0; i < produtos.size(); i++) {
                defaultTableModel.addRow(new String[]{
                    String.valueOf(produtos.get(i).getIdProduto()),
                    produtos.get(i).getNome(),
                    String.valueOf(produtos.get(i).getValorCusto()),
                    String.valueOf(produtos.get(i).getQuantidade())
                });
            }//fecha for

            jtableProduto.setModel(defaultTableModel);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro! " + e.getMessage());
        }//catch        
    }
    
    private void jbPreencherActionPerformed(java.awt.event.ActionEvent evt) {                                            
        limpar();
        preencher();
    }                                           

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {                                         
        limpar();
    }                                        

    private void jbDeletarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        deletar();
        limpar();
        preencher();
    }                                         

    private void jtableProdutoMouseClicked(java.awt.event.MouseEvent evt) {                                           
        alterar();
    }                                          

    private void jbConfirmarAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        confirmarAlteracao();
        limpar();
        preencher();
    }                                                    

    private void jtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {                                       
        limpar();
        filtrar();
    }                                      

    private void jcbFiltroItemStateChanged(java.awt.event.ItemEvent evt) {                                           
                limpar();
        filtrar();
    }                                          

    // Variables declaration - do not modify                     
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbConfirmarAlteracao;
    private javax.swing.JButton jbDeletar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbPreencher;
    private javax.swing.JComboBox<String> jcbFiltro;
    private javax.swing.JTextField jtCodigo;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtPesquisa;
    private javax.swing.JTextField jtQuantidade;
    private javax.swing.JTextField jtValorCusto;
    private javax.swing.JTable jtableProduto;
    // End of variables declaration                   
}
I