/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dao;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import modelo.ProdutoVO;
import persistencia.ConexaoBanco;

/**
 * @author Thiago Cury
 * @since 07/04/2014 - 11:46
 * @version 1.0 beta
 */
public class ProdutoDAO {

    /**
     * @author Thiago Cury
     * @version 1.0 beta
     * @since 07/04/2014
     */
    public void cadastrarProduto(ProdutoVO pVO) throws SQLException {

        Connection con = ConexaoBanco.getConexao();
        Statement stat = con.createStatement();

        try {
            String sql;

            sql = "insert into produto(idproduto,nome,valorcusto,quantidade)"
                    + "values(null, '" + pVO.getNome() + "', " + pVO.getValorCusto() + ", " + pVO.getQuantidade() + ")";

            stat.execute(sql);

        } catch (SQLException e) {
            throw new SQLException("Erro ao cadastrar produto! " + e.getMessage());
        } finally {
            con.close();
            stat.close();
        }//fecha finally
    }//fecha método

    public ArrayList<ProdutoVO> buscarProdutos()
            throws SQLException {

        Connection con = ConexaoBanco.getConexao();
        Statement stat = con.createStatement();
        try {
            String sql = "select * from produto";
            ResultSet rs = stat.executeQuery(sql);
            ArrayList<ProdutoVO> produtos = new ArrayList<>();
            while (rs.next()) {
                ProdutoVO p = new ProdutoVO();
                p.setIdProduto(rs.getLong("idproduto"));
                p.setNome(rs.getString("nome"));
                p.setValorCusto(rs.getDouble("valorcusto"));o
                p.setQuantidade(rs.getInt("quantidade"));
                produtos.add(p);//nao pode esquecer
            }
            return produtos;
        } catch (SQLException e) {
            throw new SQLException("Erro ao buscar produtos!" + e.getMessage());
        } finally {
            stat.close();
            con.close();
        }
    }//fecha buscarProdutos

    public ArrayList<ProdutoVO> filtrar(String pesquisa,
            String filtro) throws SQLException {

        Connection con = ConexaoBanco.getConexao();
        Statement stat = con.createStatement();
        try {
            String query = "";
            if (filtro.equalsIgnoreCase("código")) {
                query = "where idproduto = " + pesquisa;
            }else if(filtro.equalsIgnoreCase("nome")) {
                query = "where nome like '%" + pesquisa + "%'";
            }else if(filtro.equalsIgnoreCase("valor custo")) {
                query = "where valorcusto like '%" + pesquisa + "%'";
            }else if(filtro.equalsIgnoreCase("quantidade")) {
                query = "where quantidade like '%" + pesquisa + "%'";
            }

            String sql = "select * from produto " + query;
            
                ResultSet rs = stat.executeQuery(sql);
                ArrayList<ProdutoVO> produtos = new ArrayList<>();
                while (rs.next()) {
                    ProdutoVO p = new ProdutoVO();
                    p.setIdProduto(rs.getLong("idproduto"));
                    p.setNome(rs.getString("nome"));
                    p.setValorCusto(rs.getDouble("valorcusto"));
                    p.setQuantidade(rs.getInt("quantidade"));
                    produtos.add(p);//nao pode esquecer
                }
                return produtos;
            }catch (SQLException e) {
            throw new SQLException("Erro ao buscar produtos!" + e.getMessage());
        }finally {
            stat.close();
            con.close();
        }
        }//fecha filtrarProdutos

    

    public void deletarProduto(long id) throws SQLException {

        Connection con = ConexaoBanco.getConexao();
        Statement stat = con.createStatement();

        try {
            String sql;

            sql = "delete from produto where idproduto = " + id;

            stat.execute(sql);

        } catch (SQLException e) {
            throw new SQLException("Erro ao deletar produto! " + e.getMessage());
        } finally {
            con.close();
            stat.close();
        }//fecha finally
    }//fecha método

    public void alterarProduto(ProdutoVO pVO) throws SQLException {

        Connection con = ConexaoBanco.getConexao();
        Statement stat = con.createStatement();

        try {
            String sql;

            sql = "update produto set 	"
                    + "nome='" + pVO.getNome() + "',"
                    + "valorcusto=" + pVO.getValorCusto() + ","
                    + "quantidade=" + pVO.getQuantidade() + " where idproduto = " + pVO.getIdProduto();

            stat.executeUpdate(sql);

        } catch (SQLException e) {
            throw new SQLException("Erro ao alterar produto! " + e.getMessage());
        } finally {
            con.close();
            stat.close();
        }//fecha finally
    }//fecha método

}//fecha classe
